=pod

=head1 NAME

log-defer-viz - command-line utility for rendering log messages created by L<Log::Defer>

=head1 INPUT METHODS

    $ cat file.log | log-defer-viz
    $ log-defer-viz < file.log
    $ log-defer-viz file.log
    $ log-defer-viz file.log file2.log
    $ log-defer-viz archived.log.gz more_logs.bz2

=head1 INPUT FORMAT

    $ log-defer-viz file --input-format=json  ## default is newline separated JSON
    $ log-defer-viz file --input-format=sereal  ## Sereal::Decoder (not impl)
    $ log-defer-viz file --input-format=messagepack  ## Data::MessagePack (not impl)
    $ log-defer-viz file --input-format=storable  ## Storable (not impl)

Note: The only input format currently implemented is newline-separated JSON.

=head1 LOG MESSAGES

    $ log-defer-viz file  ## by default shows error, warn, and info logs
    $ log-defer-viz file -v  ## verbose mode (adds debug logs and more)
    $ log-defer-viz file --debug  ## show debug logs
    $ log-defer-viz file --quiet  ## only errors and warnings
    $ log-defer-viz file --verbosity 25  ## numeric verbosity threshold
    $ log-defer-viz file --nowarn  ## muffle warn logs (so show error and info)
    $ log-defer-viz file --nologs  ## don't show log section
    $ log-defer-viz file --nocolour  ## turn off terminal colours

=head1 TIMERS

    $ log-defer-viz file --timer-columns 80  ## width of timer chart
    $ log-defer-viz file --since-now  ## show relative to now times
                                      ##   like "34 minutes ago"
    $ log-defer-viz file --notimers  ## don't show timer chart

=head1 DATA SECTION

Data is extra embedded information in the log file. The available outputs are C<pretty-json>, C<json>, C<yaml>, and C<dumper>.

    $ log-defer-viz file --data  ## show data section. default is pretty-json
    $ log-defer-viz file --data-format=json  ## compact, not pretty
    $ log-defer-viz file --data-format=dumper  ## Data::Dumper
    $ log-defer-viz file --data-only  ## only show data

=head1 MISC

    $ log-defer-viz file --help  ## the text you're reading now
    $ log-defer-viz file --grep '$_->{data}'  ## grep for records that have a data section.
                                              ## $_ is the entire Log::Defer entry.

=head1 SEE ALSO

L<Log::Defer::Viz github repo|https://github.com/hoytech/Log-Defer-Viz>

L<Log::Defer github repo|https://github.com/hoytech/Log-Defer>

=head1 AUTHOR

Doug Hoyte, C<< <doug@hcsw.org> >>

=head1 COPYRIGHT & LICENSE

Copyright 2013 Doug Hoyte.

This module is licensed under the same terms as perl itself.


=cut

